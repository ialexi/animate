NOTE: API HAS CHANGED.

A simple mixin called Animatable is provided. What does it do?
It makes CSS transitions for you, and if they aren't available,
implements them in JavaScript.

Current good things:
	- Seems to work!
	- Animates 300 SC.LabelViews acceptably with only JavaScript. Animates >500
	  just as well (if not better) with CSS transitions.
	- Automatically detects if CSS transitions are available.
	
Current flaws:
	- Likely somewhat buggy. Haven't seen any bugs, though... Please tell me.
	- Not very configurable. Should at LEAST allow (preset) interpolation
	  functions.
	- No support for changing non-layout properties such as color.
	
Example Usage:

	aView: SC.LabelView.design(Animate.Animatable, {
		transitions: {
			left: .25,
			top: {duration: .25}
		}
	})


Including in your SproutCore Project
===============================================================================
First, if you know what you are doing, or just want to hack it, you can just
take the one (and only) code file, core.js, rename it, put it somewhere, whatever.
Though that won't keep you up-to-date with any improvements...


Getting the Code Using git:
> Navigate to your SproutCore project folder (the one that contains apps/, under 
which your application is located).

> git clone git://github.com/ialexi/animate.git

Getting the Code through GitHub:
Go to http://github.com/ialexi/animate and select download. Download in whichever
format you prefer.

Navigate to your SproutCore project folder; if there is no subfolder "frameworks",
create one. Under the "frameworks" folder, create a folder "animate".

Place the files that were extracted (not the containing folder) into the "animate"
folder you created.


Installing
===============================================================================
In your Buildfile, there is a line like this:
config :all, :required => :sproutcore

Add the animate framework to it by changing it to this:
config :all, :required => [:sproutcore, :animate]

Now, you should be able to use it in any view, as demonstrated above!